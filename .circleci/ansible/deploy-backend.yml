---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  environment:
    NODE_ENV: production
    VERSION: "1"
    TYPEORM_CONNECTION: postgres
    TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    TYPEORM_MIGRATIONS_DIR: ./src/migrations
    TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity.ts
    TYPEORM_HOST: database-1.ctad5e2z9b7f.us-east-1.rds.amazonaws.com
    TYPEORM_PORT: 5432
    TYPEORM_USERNAME: postgres
    TYPEORM_PASSWORD: mypassword
    TYPEORM_DATABASE: postgres
#    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
#    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
#    TYPEORM_CONNECTION: postgres
#    TYPEORM_MIGRATIONS: ./src/migrations/*.ts
#    TYPEORM_MIGRATIONS_DIR: ./src/migrations
#    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
#    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    - setup:

  roles:
    - deploy